
import tutorial;
import sys;

class Main
{
  static public main(argv)
  {
    // Objects of class File represents opened files of operating system
    //

    // Built in methods
    //
    // public final operator_binary_equal#1
    // public final File#0
    // public final File#2
    // public final close#0
    // public final write#1
    // public final flush#0
    // public final read#0
    // public final readln#0
    // public final read#1
    // public final get_fd#0
    // public final next_item#0
    // public final static to_string#0
    // public final static print#0
    //

    Tutorial.note("File object");
    ("File: %s\n" % (file = new File("03_class_file.ucl","r")).to_string()).print();
    file.close();

    Tutorial.note("File method close#0");
    file = new File("/tmp/03_class_file.ucl","w");
    ("file         -> %s\n" % file.to_string()).print();
    ("file.close() -> %s\n" % file.close().to_string()).print();

    Tutorial.note("File methods write#1 and flush#0");
    file = new File("/tmp/03_class_file.ucl","w");

    file.write("Hello world!\nHello again!\n");
    file.flush();
    file.close();

    Tutorial.note("File method read#0");
    file = new File("/tmp/03_class_file.ucl","r");
    ("file        -> %s\n" % file.to_string()).print();
    ("file.read() -> %s" % file.read()).print();
    file.close();

    Tutorial.note("File method readln#0");
    file = new File("/tmp/03_class_file.ucl","r");
    ("file          -> %s\n" % file.to_string()).print();

    do {
      ("file.readln() -> %s\n" % (line = file.readln()).to_string()).print();
    } while(Blank != line);

    file.close();

    Tutorial.note("File method read#1");
    file = new File("/tmp/03_class_file.ucl","r");
    ("file          -> %s\n" % file.to_string()).print();
    ("file.read(10) -> %s\n" % file.read(10)).print();
    ("file.read(10) -> %s\n" % file.read(10)).print();
    file.close();

    Tutorial.note("File method get_fd#1");
    file = new File("/tmp/03_class_file.ucl","r");
    ("file          -> %s\n" % file.to_string()).print();
    ("file.get_fd() -> %d\n" % file.get_fd()).print();
    file.close();

    // Function of special methods is described in
    // 01_syntax/11_spec_methods.ucl
    //
    // public final next_item#0
    // public final static to_string#0
    // public final static print#0
    //

    Tutorial.note("File built in constants");

    // Built in constants
    //
    // public static static_const stdin
    // public static static_const stdout
    // public static static_const stderr
    //

    ("File.stdin:  %s\n" % File.stdin.to_string()).print();
    ("File.stdout: %s\n" % File.stdout.to_string()).print();
    ("File.stderr: %s\n" % File.stderr.to_string()).print();

    // Methods of class File throws following exceptions
    //
    // c_error_FILE_OPEN_ERROR
    // c_error_FILE_CLOSE_ERROR
    // c_error_FILE_NOT_OPENED
    //

    Tutorial.note("Tutorial end");
  }
}

