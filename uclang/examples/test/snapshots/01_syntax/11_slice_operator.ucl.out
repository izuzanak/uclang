
=== Array slice ================================================================

array: [1,2,3,4,5,6,7,8,9,10]
array[::2]: [1,3,5,7,9]
array[-1::-2]: [10,8,6,4,2]

=== String slice ===============================================================

"!!ddllrrooww oolllleeHH"[::-2]: Hello world!

=== Iter_0 slice ===============================================================

Iter_0[::]: [item(0),item(1),item(2),item(3),item(4),item(5),item(6),item(7),item(8),item(9)]
Iter_0[::-1]: [item(9),item(8),item(7),item(6),item(5),item(4),item(3),item(2),item(1),item(0)]

=== Iter_1 slice ===============================================================

Iter_1[::]: [item(0),item(1),item(2),item(3),item(4),item(5),item(6),item(7),item(8),item(9)]
Iter_1[::-1]: [item(9),item(8),item(7),item(6),item(5),item(4),item(3),item(2),item(1),item(0)]
Iter_1[4::]: [item(4),item(5),item(6),item(7),item(8),item(9)]
Iter_1[-4::-1]: [item(6),item(5),item(4),item(3),item(2),item(1),item(0)]

=== File lines slice ===========================================================

Odd lines: [// vim: syntax=java,import tutorial;,import containers;,class Main,  static public main(argv),    // Slice operator syntax,    //,    // <end>   - index of last value,    //,    //,    // All iterable objects can be slices.,,    array = [1,2,3,4,5,6,7,8,9,10];,    ("array[::2]: %s\n" % $array[::2]).print();,,    //,    Tutorial.note("String slice");,,    //,    Tutorial.note("Iter_0 slice");,    ("Iter_0[::]: %s\n" % $new Iter_0(10)[::]).print();,,    ("Iter_1[::]: %s\n" % $new Iter_1(10)[::]).print();,    ("Iter_1[4::]: %s\n" % $new Iter_1(10)[4::]).print();,,    //,    Tutorial.note("File lines slice");,,  },,{/*{{{*/,,  {,  },  public first_idx(),    return 0;,,  {,    return new_idx < max_idx ? new_idx : new Blank();,,  {,  },  public length(),    return max_idx;,}/*}}}*/,class Iter_1,  idx;,,  {,    max_idx = a_max_idx;,,  {,    {,    },    {,    },,  {,  },]

=== Tutorial end ===============================================================

