#vim: set syntax=rules:

init_code: {}

terminals:
  empty_line {'\n'}
  text_line {(l+d).!'\n'*.'\n'}

  ls_br {'<'}

  brief  {[\\@]."brief"}
  param  {[\\@]."param ".('_'+l).('_'+l+d)*}
  return {[\\@]."return"}

  file      {[\\@]."file "  .([_.]+l+d).([_-.]+l+d)*}
  class     {[\\@]."class " .([_.]+l+d).([_.]+l+d)*}
  method    {[\\@]."method ".([_.]+l+d).([_.#]+l+d)*}
  var       {[\\@]."var "   .([_.]+l+d).([_.#]+l+d)*}

  _SKIP_      {[\t ].[\t ]*}
  _SKIP__     {'#'.[!#]}
  _SKIP___    {"//".[!/]}
  _SKIP____   {"/*".[!*]}
  _SKIP_____  {"*".('/'+e)}

  _END_ {'\0'}

nonterminals:
  <start>
  <end_check>

  <code>
  <heading>
  <paragraph>
  <after>

  <item_list>
  <item>

  <line_list>
  <line>

rules:
  <start> -> <end_check> ->> {}

  <end_check> -> <code> _END_ ->> {}
  <end_check> -> _END_ ->> {}

  <code> -> <heading> <item_list> ->> {}
  <code> -> <item_list> ->> {}

  <heading> -> <paragraph> ->> {}
  <heading> -> <after> <paragraph> ->> {}
  <heading> -> <after> ->> {}

  <paragraph> -> <line_list> ->> {print("paragraph")}

  <after> -> ls_br ->> {print("after_member")}

  <item_list> -> <item> ->> {}
  <item_list> -> <item_list> <item> ->> {}

  <item> -> empty_line ->> {}
  <item> -> empty_line <paragraph> ->> {}

  <item> -> brief <line_list> ->> {print("brief")}
  <item> -> param <line_list> ->> {print("param: "..rule_body(0).."")}
  <item> -> return <line_list> ->> {print("return")}

  <item> -> file ->> {print("file: "..rule_body(0).."")}
  <item> -> class ->> {print("class: "..rule_body(0).."")}
  <item> -> method ->> {print("method: "..rule_body(0).."")}
  <item> -> var ->> {print("var: "..rule_body(0).."")}

  <line_list> -> <line> ->> {}
  <line_list> -> <line_list> <line> ->> {}

  <line> -> text_line ->> {print("--------------------------------------------| ",rule_body(0));}

